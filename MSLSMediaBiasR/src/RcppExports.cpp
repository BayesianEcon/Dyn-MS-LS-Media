// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <iomanip>
#include <iostream>
#include <utility>
#include <vector>
#include <string>
#include <list>

#include <RcppDist.h>
#include <RcppArmadillo.h>

// [[Rcpp::depends( RcppDist , RcppArmadillo)]]

using namespace Rcpp;
using namespace arma;
using namespace std;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dist
NumericVector dist(NumericVector x);
RcppExport SEXP _MSLSMediaBiasR_dist(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(dist(x));
    return rcpp_result_gen;
END_RCPP
}
// mean_mat
double mean_mat(NumericMatrix A);
RcppExport SEXP _MSLSMediaBiasR_mean_mat(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(mean_mat(A));
    return rcpp_result_gen;
END_RCPP
}
// median_mat
double median_mat(NumericMatrix A);
RcppExport SEXP _MSLSMediaBiasR_median_mat(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(median_mat(A));
    return rcpp_result_gen;
END_RCPP
}
// sd_mat
double sd_mat(NumericMatrix A);
RcppExport SEXP _MSLSMediaBiasR_sd_mat(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(sd_mat(A));
    return rcpp_result_gen;
END_RCPP
}
// mvrnormArma
arma::mat mvrnormArma(int n, arma::vec mu, arma::mat sigma);
RcppExport SEXP _MSLSMediaBiasR_mvrnormArma(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(mvrnormArma(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// clog_sum_exp
double clog_sum_exp(arma::vec x);
RcppExport SEXP _MSLSMediaBiasR_clog_sum_exp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(clog_sum_exp(x));
    return rcpp_result_gen;
END_RCPP
}
// csoftmax
NumericVector csoftmax(NumericVector x);
RcppExport SEXP _MSLSMediaBiasR_csoftmax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(csoftmax(x));
    return rcpp_result_gen;
END_RCPP
}
// logistic_d
double logistic_d(double x);
RcppExport SEXP _MSLSMediaBiasR_logistic_d(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logistic_d(x));
    return rcpp_result_gen;
END_RCPP
}
// arma_sort
vec arma_sort(vec x, vec y, vec z);
RcppExport SEXP _MSLSMediaBiasR_arma_sort(SEXP xSEXP, SEXP ySEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(arma_sort(x, y, z));
    return rcpp_result_gen;
END_RCPP
}
// logbivnorm
double logbivnorm(arma::vec x, arma::vec mean, arma::mat sigma);
RcppExport SEXP _MSLSMediaBiasR_logbivnorm(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(logbivnorm(x, mean, sigma));
    return rcpp_result_gen;
END_RCPP
}
// FFBS
List FFBS(NumericVector Acc, NumericVector Bcc, NumericMatrix alef, NumericMatrix bet, NumericMatrix Eta, NumericMatrix P, double T);
RcppExport SEXP _MSLSMediaBiasR_FFBS(SEXP AccSEXP, SEXP BccSEXP, SEXP alefSEXP, SEXP betSEXP, SEXP EtaSEXP, SEXP PSEXP, SEXP TSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Acc(AccSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Bcc(BccSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alef(alefSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type bet(betSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Eta(EtaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    Rcpp::traits::input_parameter< double >::type T(TSEXP);
    rcpp_result_gen = Rcpp::wrap(FFBS(Acc, Bcc, alef, bet, Eta, P, T));
    return rcpp_result_gen;
END_RCPP
}
// gammaSamplingEn
NumericVector gammaSamplingEn(NumericVector leaning, NumericVector zi_1, double phi, double gamma_0, double gamma_1, double a_gamma_0, double a_gamma_1, double b_gamma_0, double b_gamma_1, double interp_eq, NumericVector prop_sigma);
RcppExport SEXP _MSLSMediaBiasR_gammaSamplingEn(SEXP leaningSEXP, SEXP zi_1SEXP, SEXP phiSEXP, SEXP gamma_0SEXP, SEXP gamma_1SEXP, SEXP a_gamma_0SEXP, SEXP a_gamma_1SEXP, SEXP b_gamma_0SEXP, SEXP b_gamma_1SEXP, SEXP interp_eqSEXP, SEXP prop_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type leaning(leaningSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_1(zi_1SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_0(gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type gamma_1(gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma_0(a_gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma_1(a_gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma_0(b_gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma_1(b_gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type interp_eq(interp_eqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prop_sigma(prop_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(gammaSamplingEn(leaning, zi_1, phi, gamma_0, gamma_1, a_gamma_0, a_gamma_1, b_gamma_0, b_gamma_1, interp_eq, prop_sigma));
    return rcpp_result_gen;
END_RCPP
}
// phiSamplingEn
double phiSamplingEn(NumericVector leaning, NumericVector zi_1, double phi, double gamma_0, double gamma_1, double a_phi, double b_phi, double interp_eq, double prop_sigma);
RcppExport SEXP _MSLSMediaBiasR_phiSamplingEn(SEXP leaningSEXP, SEXP zi_1SEXP, SEXP phiSEXP, SEXP gamma_0SEXP, SEXP gamma_1SEXP, SEXP a_phiSEXP, SEXP b_phiSEXP, SEXP interp_eqSEXP, SEXP prop_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type leaning(leaningSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_1(zi_1SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_0(gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type gamma_1(gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type a_phi(a_phiSEXP);
    Rcpp::traits::input_parameter< double >::type b_phi(b_phiSEXP);
    Rcpp::traits::input_parameter< double >::type interp_eq(interp_eqSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sigma(prop_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(phiSamplingEn(leaning, zi_1, phi, gamma_0, gamma_1, a_phi, b_phi, interp_eq, prop_sigma));
    return rcpp_result_gen;
END_RCPP
}
// cseq
NumericVector cseq(double first, double last, double by);
RcppExport SEXP _MSLSMediaBiasR_cseq(SEXP firstSEXP, SEXP lastSEXP, SEXP bySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type first(firstSEXP);
    Rcpp::traits::input_parameter< double >::type last(lastSEXP);
    Rcpp::traits::input_parameter< double >::type by(bySEXP);
    rcpp_result_gen = Rcpp::wrap(cseq(first, last, by));
    return rcpp_result_gen;
END_RCPP
}
// dmvnrm_arma
arma::vec dmvnrm_arma(arma::mat const& x, arma::rowvec const& mean, arma::mat const& sigma, bool const logd);
RcppExport SEXP _MSLSMediaBiasR_dmvnrm_arma(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec const& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// dmvnrm_arma_fast
arma::vec dmvnrm_arma_fast(arma::mat const& x, arma::rowvec const& mean, arma::mat const& sigma, bool const logd);
RcppExport SEXP _MSLSMediaBiasR_dmvnrm_arma_fast(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec const& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnrm_arma_fast(x, mean, sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// cdiff
NumericMatrix cdiff(NumericVector A);
RcppExport SEXP _MSLSMediaBiasR_cdiff(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(cdiff(A));
    return rcpp_result_gen;
END_RCPP
}
// ecldist_point
NumericVector ecldist_point(NumericVector A, NumericVector B, int i);
RcppExport SEXP _MSLSMediaBiasR_ecldist_point(SEXP ASEXP, SEXP BSEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(ecldist_point(A, B, i));
    return rcpp_result_gen;
END_RCPP
}
// ecldist
NumericMatrix ecldist(NumericVector A, NumericVector B);
RcppExport SEXP _MSLSMediaBiasR_ecldist(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(ecldist(A, B));
    return rcpp_result_gen;
END_RCPP
}
// ecldistp2
NumericMatrix ecldistp2(NumericVector A, NumericVector B);
RcppExport SEXP _MSLSMediaBiasR_ecldistp2(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(ecldistp2(A, B));
    return rcpp_result_gen;
END_RCPP
}
// gath
NumericMatrix gath(NumericMatrix A);
RcppExport SEXP _MSLSMediaBiasR_gath(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(gath(A));
    return rcpp_result_gen;
END_RCPP
}
// gath_tri
NumericMatrix gath_tri(NumericMatrix A);
RcppExport SEXP _MSLSMediaBiasR_gath_tri(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(gath_tri(A));
    return rcpp_result_gen;
END_RCPP
}
// caggH
DataFrame caggH(NumericVector ab_logl, NumericVector ab_logl_prop, NumericVector pois, NumericVector pois_prop, int N);
RcppExport SEXP _MSLSMediaBiasR_caggH(SEXP ab_loglSEXP, SEXP ab_logl_propSEXP, SEXP poisSEXP, SEXP pois_propSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ab_logl(ab_loglSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ab_logl_prop(ab_logl_propSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pois(poisSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pois_prop(pois_propSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(caggH(ab_logl, ab_logl_prop, pois, pois_prop, N));
    return rcpp_result_gen;
END_RCPP
}
// caggG
DataFrame caggG(NumericVector pois, NumericVector pois_prop, int N);
RcppExport SEXP _MSLSMediaBiasR_caggG(SEXP poisSEXP, SEXP pois_propSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type pois(poisSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pois_prop(pois_propSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(caggG(pois, pois_prop, N));
    return rcpp_result_gen;
END_RCPP
}
// cagglogG
DataFrame cagglogG(NumericVector g_a, NumericVector g_b, int M, int Times);
RcppExport SEXP _MSLSMediaBiasR_cagglogG(SEXP g_aSEXP, SEXP g_bSEXP, SEXP MSEXP, SEXP TimesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type g_a(g_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g_b(g_bSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type Times(TimesSEXP);
    rcpp_result_gen = Rcpp::wrap(cagglogG(g_a, g_b, M, Times));
    return rcpp_result_gen;
END_RCPP
}
// cagglogH
DataFrame cagglogH(NumericVector B_a, NumericVector B_b, int N, int Times);
RcppExport SEXP _MSLSMediaBiasR_cagglogH(SEXP B_aSEXP, SEXP B_bSEXP, SEXP NSEXP, SEXP TimesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type B_a(B_aSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type B_b(B_bSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type Times(TimesSEXP);
    rcpp_result_gen = Rcpp::wrap(cagglogH(B_a, B_b, N, Times));
    return rcpp_result_gen;
END_RCPP
}
// ziPropSampling
NumericMatrix ziPropSampling(NumericMatrix zi, double lambda, int N);
RcppExport SEXP _MSLSMediaBiasR_ziPropSampling(SEXP ziSEXP, SEXP lambdaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type zi(ziSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(ziPropSampling(zi, lambda, N));
    return rcpp_result_gen;
END_RCPP
}
// procrustes_cpp
NumericMatrix procrustes_cpp(NumericMatrix X, NumericMatrix Y);
RcppExport SEXP _MSLSMediaBiasR_procrustes_cpp(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(procrustes_cpp(X, Y));
    return rcpp_result_gen;
END_RCPP
}
// rdirichlet_cpp
arma::mat rdirichlet_cpp(int num_samples, arma::vec alpha_m);
RcppExport SEXP _MSLSMediaBiasR_rdirichlet_cpp(SEXP num_samplesSEXP, SEXP alpha_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type num_samples(num_samplesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_m(alpha_mSEXP);
    rcpp_result_gen = Rcpp::wrap(rdirichlet_cpp(num_samples, alpha_m));
    return rcpp_result_gen;
END_RCPP
}
// sampleTransP
NumericMatrix sampleTransP(NumericVector xi_state1, NumericVector xi_state2, double omega_lower_a, double omega_lower_b, NumericMatrix P, double Time);
RcppExport SEXP _MSLSMediaBiasR_sampleTransP(SEXP xi_state1SEXP, SEXP xi_state2SEXP, SEXP omega_lower_aSEXP, SEXP omega_lower_bSEXP, SEXP PSEXP, SEXP TimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xi_state1(xi_state1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi_state2(xi_state2SEXP);
    Rcpp::traits::input_parameter< double >::type omega_lower_a(omega_lower_aSEXP);
    Rcpp::traits::input_parameter< double >::type omega_lower_b(omega_lower_bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    Rcpp::traits::input_parameter< double >::type Time(TimeSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleTransP(xi_state1, xi_state2, omega_lower_a, omega_lower_b, P, Time));
    return rcpp_result_gen;
END_RCPP
}
// vec_nbet
NumericVector vec_nbet(NumericVector x, double N);
RcppExport SEXP _MSLSMediaBiasR_vec_nbet(SEXP xSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_nbet(x, N));
    return rcpp_result_gen;
END_RCPP
}
// ZetaSamplingAdC
List ZetaSamplingAdC(NumericVector zi_s_1, NumericVector zi_s_2, NumericVector lam_ad_zs, NumericMatrix mu_mat_zs, List Sigma_ad_zs, double alpha, NumericVector beta, NumericVector xi_state_s, NumericVector x_i, NumericVector DBplane_i, NumericVector x_w, NumericVector leaning, NumericVector x_ones, NumericVector mu_s, double sigma_s, double gamma_0, double gamma_1, double phi, int M, int N, double acc_star, double interp_eq, double ite);
RcppExport SEXP _MSLSMediaBiasR_ZetaSamplingAdC(SEXP zi_s_1SEXP, SEXP zi_s_2SEXP, SEXP lam_ad_zsSEXP, SEXP mu_mat_zsSEXP, SEXP Sigma_ad_zsSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP xi_state_sSEXP, SEXP x_iSEXP, SEXP DBplane_iSEXP, SEXP x_wSEXP, SEXP leaningSEXP, SEXP x_onesSEXP, SEXP mu_sSEXP, SEXP sigma_sSEXP, SEXP gamma_0SEXP, SEXP gamma_1SEXP, SEXP phiSEXP, SEXP MSEXP, SEXP NSEXP, SEXP acc_starSEXP, SEXP interp_eqSEXP, SEXP iteSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zi_s_1(zi_s_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_s_2(zi_s_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam_ad_zs(lam_ad_zsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu_mat_zs(mu_mat_zsSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma_ad_zs(Sigma_ad_zsSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi_state_s(xi_state_sSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type DBplane_i(DBplane_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_w(x_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type leaning(leaningSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_ones(x_onesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu_s(mu_sSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_s(sigma_sSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_0(gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type gamma_1(gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type acc_star(acc_starSEXP);
    Rcpp::traits::input_parameter< double >::type interp_eq(interp_eqSEXP);
    Rcpp::traits::input_parameter< double >::type ite(iteSEXP);
    rcpp_result_gen = Rcpp::wrap(ZetaSamplingAdC(zi_s_1, zi_s_2, lam_ad_zs, mu_mat_zs, Sigma_ad_zs, alpha, beta, xi_state_s, x_i, DBplane_i, x_w, leaning, x_ones, mu_s, sigma_s, gamma_0, gamma_1, phi, M, N, acc_star, interp_eq, ite));
    return rcpp_result_gen;
END_RCPP
}
// vec_nbet_tri
NumericVector vec_nbet_tri(NumericVector beta, double N);
RcppExport SEXP _MSLSMediaBiasR_vec_nbet_tri(SEXP betaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_nbet_tri(beta, N));
    return rcpp_result_gen;
END_RCPP
}
// vec_nbet_tri_a
NumericVector vec_nbet_tri_a(NumericVector beta, double N);
RcppExport SEXP _MSLSMediaBiasR_vec_nbet_tri_a(SEXP betaSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_nbet_tri_a(beta, N));
    return rcpp_result_gen;
END_RCPP
}
// betaSamplingEn
NumericVector betaSamplingEn(NumericVector vec_y, NumericVector beta, NumericVector vec_dist, double beta_a, double beta_b, double N, double Time, NumericVector x_i, double prop_sigma);
RcppExport SEXP _MSLSMediaBiasR_betaSamplingEn(SEXP vec_ySEXP, SEXP betaSEXP, SEXP vec_distSEXP, SEXP beta_aSEXP, SEXP beta_bSEXP, SEXP NSEXP, SEXP TimeSEXP, SEXP x_iSEXP, SEXP prop_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec_y(vec_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_dist(vec_distSEXP);
    Rcpp::traits::input_parameter< double >::type beta_a(beta_aSEXP);
    Rcpp::traits::input_parameter< double >::type beta_b(beta_bSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sigma(prop_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(betaSamplingEn(vec_y, beta, vec_dist, beta_a, beta_b, N, Time, x_i, prop_sigma));
    return rcpp_result_gen;
END_RCPP
}
// betaSamplingEnAdC
List betaSamplingEnAdC(NumericVector vec_y, NumericVector lam_ad_beta, NumericMatrix mu_mat_beta, List Sigma_ad_beta, NumericVector beta, NumericVector vec_dist, double beta_a, double beta_b, double N, double Time, NumericVector x_i, double acc_star, double ite);
RcppExport SEXP _MSLSMediaBiasR_betaSamplingEnAdC(SEXP vec_ySEXP, SEXP lam_ad_betaSEXP, SEXP mu_mat_betaSEXP, SEXP Sigma_ad_betaSEXP, SEXP betaSEXP, SEXP vec_distSEXP, SEXP beta_aSEXP, SEXP beta_bSEXP, SEXP NSEXP, SEXP TimeSEXP, SEXP x_iSEXP, SEXP acc_starSEXP, SEXP iteSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec_y(vec_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam_ad_beta(lam_ad_betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu_mat_beta(mu_mat_betaSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma_ad_beta(Sigma_ad_betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type vec_dist(vec_distSEXP);
    Rcpp::traits::input_parameter< double >::type beta_a(beta_aSEXP);
    Rcpp::traits::input_parameter< double >::type beta_b(beta_bSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< double >::type acc_star(acc_starSEXP);
    Rcpp::traits::input_parameter< double >::type ite(iteSEXP);
    rcpp_result_gen = Rcpp::wrap(betaSamplingEnAdC(vec_y, lam_ad_beta, mu_mat_beta, Sigma_ad_beta, beta, vec_dist, beta_a, beta_b, N, Time, x_i, acc_star, ite));
    return rcpp_result_gen;
END_RCPP
}
// rinvgamma
double rinvgamma(double shape, double scale);
RcppExport SEXP _MSLSMediaBiasR_rinvgamma(SEXP shapeSEXP, SEXP scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    Rcpp::traits::input_parameter< double >::type scale(scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(rinvgamma(shape, scale));
    return rcpp_result_gen;
END_RCPP
}
// invSamplingEn
double invSamplingEn(NumericVector zi_s_1, double a_prior_ig, double b_prior_ig, int N);
RcppExport SEXP _MSLSMediaBiasR_invSamplingEn(SEXP zi_s_1SEXP, SEXP a_prior_igSEXP, SEXP b_prior_igSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zi_s_1(zi_s_1SEXP);
    Rcpp::traits::input_parameter< double >::type a_prior_ig(a_prior_igSEXP);
    Rcpp::traits::input_parameter< double >::type b_prior_ig(b_prior_igSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(invSamplingEn(zi_s_1, a_prior_ig, b_prior_ig, N));
    return rcpp_result_gen;
END_RCPP
}
// PosteriorPredictive
NumericVector PosteriorPredictive(NumericVector beta, NumericVector zi_a_1, NumericVector zi_b_1, NumericVector xi_state1, double N, double Time);
RcppExport SEXP _MSLSMediaBiasR_PosteriorPredictive(SEXP betaSEXP, SEXP zi_a_1SEXP, SEXP zi_b_1SEXP, SEXP xi_state1SEXP, SEXP NSEXP, SEXP TimeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_a_1(zi_a_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_b_1(zi_b_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi_state1(xi_state1SEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type Time(TimeSEXP);
    rcpp_result_gen = Rcpp::wrap(PosteriorPredictive(beta, zi_a_1, zi_b_1, xi_state1, N, Time));
    return rcpp_result_gen;
END_RCPP
}
// alphaSamplingEn
double alphaSamplingEn(NumericVector vec_y, double alpha, double alpha_a, double alpha_b, double N, double Time, double M, double prop_sigma);
RcppExport SEXP _MSLSMediaBiasR_alphaSamplingEn(SEXP vec_ySEXP, SEXP alphaSEXP, SEXP alpha_aSEXP, SEXP alpha_bSEXP, SEXP NSEXP, SEXP TimeSEXP, SEXP MSEXP, SEXP prop_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec_y(vec_ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_a(alpha_aSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_b(alpha_bSEXP);
    Rcpp::traits::input_parameter< double >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< double >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sigma(prop_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(alphaSamplingEn(vec_y, alpha, alpha_a, alpha_b, N, Time, M, prop_sigma));
    return rcpp_result_gen;
END_RCPP
}
// MCMC
List MCMC(NumericVector princ_w, NumericVector princ_ones, NumericVector x_w, NumericVector x_ones, NumericVector leaning, NumericVector lam_ad_beta, NumericMatrix mu_mat_beta, List Sigma_ad_beta, NumericVector lam_ad_za, NumericMatrix mu_mat_za, List Sigma_ad_za, NumericVector lam_ad_zb, NumericMatrix mu_mat_zb, List Sigma_ad_zb, NumericVector beta, NumericVector xi_state1, NumericVector zi_a_1, NumericVector zi_b_1, double mu_beta, double sigma_beta, double mu_a, double sigma_a, double mu_b, double sigma_b, double s_a, double s_b, double phi, double gamma_0, double gamma_1, double a_phi, double b_phi, double a_gamma_0, double b_gamma_0, double a_gamma_1, double b_gamma_1, double omega_lower_a, double omega_lower_b, NumericMatrix P, int N, int Time, NumericVector x_i, NumericVector DBplane_i, double prop_sd_rg, double prop_sd_gamma, double prop_sd_phi, double acc_beta, double acc_zeta_a, double acc_zeta_b, double pivot, double sign, double interp_eq, double ms_eq, double rg_eq, int Iterations);
RcppExport SEXP _MSLSMediaBiasR_MCMC(SEXP princ_wSEXP, SEXP princ_onesSEXP, SEXP x_wSEXP, SEXP x_onesSEXP, SEXP leaningSEXP, SEXP lam_ad_betaSEXP, SEXP mu_mat_betaSEXP, SEXP Sigma_ad_betaSEXP, SEXP lam_ad_zaSEXP, SEXP mu_mat_zaSEXP, SEXP Sigma_ad_zaSEXP, SEXP lam_ad_zbSEXP, SEXP mu_mat_zbSEXP, SEXP Sigma_ad_zbSEXP, SEXP betaSEXP, SEXP xi_state1SEXP, SEXP zi_a_1SEXP, SEXP zi_b_1SEXP, SEXP mu_betaSEXP, SEXP sigma_betaSEXP, SEXP mu_aSEXP, SEXP sigma_aSEXP, SEXP mu_bSEXP, SEXP sigma_bSEXP, SEXP s_aSEXP, SEXP s_bSEXP, SEXP phiSEXP, SEXP gamma_0SEXP, SEXP gamma_1SEXP, SEXP a_phiSEXP, SEXP b_phiSEXP, SEXP a_gamma_0SEXP, SEXP b_gamma_0SEXP, SEXP a_gamma_1SEXP, SEXP b_gamma_1SEXP, SEXP omega_lower_aSEXP, SEXP omega_lower_bSEXP, SEXP PSEXP, SEXP NSEXP, SEXP TimeSEXP, SEXP x_iSEXP, SEXP DBplane_iSEXP, SEXP prop_sd_rgSEXP, SEXP prop_sd_gammaSEXP, SEXP prop_sd_phiSEXP, SEXP acc_betaSEXP, SEXP acc_zeta_aSEXP, SEXP acc_zeta_bSEXP, SEXP pivotSEXP, SEXP signSEXP, SEXP interp_eqSEXP, SEXP ms_eqSEXP, SEXP rg_eqSEXP, SEXP IterationsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type princ_w(princ_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type princ_ones(princ_onesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_w(x_wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_ones(x_onesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type leaning(leaningSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam_ad_beta(lam_ad_betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu_mat_beta(mu_mat_betaSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma_ad_beta(Sigma_ad_betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam_ad_za(lam_ad_zaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu_mat_za(mu_mat_zaSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma_ad_za(Sigma_ad_zaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lam_ad_zb(lam_ad_zbSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mu_mat_zb(mu_mat_zbSEXP);
    Rcpp::traits::input_parameter< List >::type Sigma_ad_zb(Sigma_ad_zbSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xi_state1(xi_state1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_a_1(zi_a_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type zi_b_1(zi_b_1SEXP);
    Rcpp::traits::input_parameter< double >::type mu_beta(mu_betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_beta(sigma_betaSEXP);
    Rcpp::traits::input_parameter< double >::type mu_a(mu_aSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_a(sigma_aSEXP);
    Rcpp::traits::input_parameter< double >::type mu_b(mu_bSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_b(sigma_bSEXP);
    Rcpp::traits::input_parameter< double >::type s_a(s_aSEXP);
    Rcpp::traits::input_parameter< double >::type s_b(s_bSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_0(gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type gamma_1(gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type a_phi(a_phiSEXP);
    Rcpp::traits::input_parameter< double >::type b_phi(b_phiSEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma_0(a_gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma_0(b_gamma_0SEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma_1(a_gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma_1(b_gamma_1SEXP);
    Rcpp::traits::input_parameter< double >::type omega_lower_a(omega_lower_aSEXP);
    Rcpp::traits::input_parameter< double >::type omega_lower_b(omega_lower_bSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type Time(TimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x_i(x_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type DBplane_i(DBplane_iSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sd_rg(prop_sd_rgSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sd_gamma(prop_sd_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type prop_sd_phi(prop_sd_phiSEXP);
    Rcpp::traits::input_parameter< double >::type acc_beta(acc_betaSEXP);
    Rcpp::traits::input_parameter< double >::type acc_zeta_a(acc_zeta_aSEXP);
    Rcpp::traits::input_parameter< double >::type acc_zeta_b(acc_zeta_bSEXP);
    Rcpp::traits::input_parameter< double >::type pivot(pivotSEXP);
    Rcpp::traits::input_parameter< double >::type sign(signSEXP);
    Rcpp::traits::input_parameter< double >::type interp_eq(interp_eqSEXP);
    Rcpp::traits::input_parameter< double >::type ms_eq(ms_eqSEXP);
    Rcpp::traits::input_parameter< double >::type rg_eq(rg_eqSEXP);
    Rcpp::traits::input_parameter< int >::type Iterations(IterationsSEXP);
    rcpp_result_gen = Rcpp::wrap(MCMC(princ_w, princ_ones, x_w, x_ones, leaning, lam_ad_beta, mu_mat_beta, Sigma_ad_beta, lam_ad_za, mu_mat_za, Sigma_ad_za, lam_ad_zb, mu_mat_zb, Sigma_ad_zb, beta, xi_state1, zi_a_1, zi_b_1, mu_beta, sigma_beta, mu_a, sigma_a, mu_b, sigma_b, s_a, s_b, phi, gamma_0, gamma_1, a_phi, b_phi, a_gamma_0, b_gamma_0, a_gamma_1, b_gamma_1, omega_lower_a, omega_lower_b, P, N, Time, x_i, DBplane_i, prop_sd_rg, prop_sd_gamma, prop_sd_phi, acc_beta, acc_zeta_a, acc_zeta_b, pivot, sign, interp_eq, ms_eq, rg_eq, Iterations));
    return rcpp_result_gen;
END_RCPP
}
// update_zi
List update_zi(NumericMatrix zi_a_it, NumericMatrix zi_b_it);
RcppExport SEXP _MSLSMediaBiasR_update_zi(SEXP zi_a_itSEXP, SEXP zi_b_itSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type zi_a_it(zi_a_itSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zi_b_it(zi_b_itSEXP);
    rcpp_result_gen = Rcpp::wrap(update_zi(zi_a_it, zi_b_it));
    return rcpp_result_gen;
END_RCPP
}
// update_x
NumericMatrix update_x(NumericMatrix x_it, NumericMatrix zi_a_it, NumericMatrix zi_b_it);
RcppExport SEXP _MSLSMediaBiasR_update_x(SEXP x_itSEXP, SEXP zi_a_itSEXP, SEXP zi_b_itSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x_it(x_itSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zi_a_it(zi_a_itSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type zi_b_it(zi_b_itSEXP);
    rcpp_result_gen = Rcpp::wrap(update_x(x_it, zi_a_it, zi_b_it));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MSLSMediaBiasR_dist", (DL_FUNC) &_MSLSMediaBiasR_dist, 1},
    {"_MSLSMediaBiasR_mean_mat", (DL_FUNC) &_MSLSMediaBiasR_mean_mat, 1},
    {"_MSLSMediaBiasR_median_mat", (DL_FUNC) &_MSLSMediaBiasR_median_mat, 1},
    {"_MSLSMediaBiasR_sd_mat", (DL_FUNC) &_MSLSMediaBiasR_sd_mat, 1},
    {"_MSLSMediaBiasR_mvrnormArma", (DL_FUNC) &_MSLSMediaBiasR_mvrnormArma, 3},
    {"_MSLSMediaBiasR_clog_sum_exp", (DL_FUNC) &_MSLSMediaBiasR_clog_sum_exp, 1},
    {"_MSLSMediaBiasR_csoftmax", (DL_FUNC) &_MSLSMediaBiasR_csoftmax, 1},
    {"_MSLSMediaBiasR_logistic_d", (DL_FUNC) &_MSLSMediaBiasR_logistic_d, 1},
    {"_MSLSMediaBiasR_arma_sort", (DL_FUNC) &_MSLSMediaBiasR_arma_sort, 3},
    {"_MSLSMediaBiasR_logbivnorm", (DL_FUNC) &_MSLSMediaBiasR_logbivnorm, 3},
    {"_MSLSMediaBiasR_FFBS", (DL_FUNC) &_MSLSMediaBiasR_FFBS, 7},
    {"_MSLSMediaBiasR_gammaSamplingEn", (DL_FUNC) &_MSLSMediaBiasR_gammaSamplingEn, 11},
    {"_MSLSMediaBiasR_phiSamplingEn", (DL_FUNC) &_MSLSMediaBiasR_phiSamplingEn, 9},
    {"_MSLSMediaBiasR_cseq", (DL_FUNC) &_MSLSMediaBiasR_cseq, 3},
    {"_MSLSMediaBiasR_dmvnrm_arma", (DL_FUNC) &_MSLSMediaBiasR_dmvnrm_arma, 4},
    {"_MSLSMediaBiasR_dmvnrm_arma_fast", (DL_FUNC) &_MSLSMediaBiasR_dmvnrm_arma_fast, 4},
    {"_MSLSMediaBiasR_cdiff", (DL_FUNC) &_MSLSMediaBiasR_cdiff, 1},
    {"_MSLSMediaBiasR_ecldist_point", (DL_FUNC) &_MSLSMediaBiasR_ecldist_point, 3},
    {"_MSLSMediaBiasR_ecldist", (DL_FUNC) &_MSLSMediaBiasR_ecldist, 2},
    {"_MSLSMediaBiasR_ecldistp2", (DL_FUNC) &_MSLSMediaBiasR_ecldistp2, 2},
    {"_MSLSMediaBiasR_gath", (DL_FUNC) &_MSLSMediaBiasR_gath, 1},
    {"_MSLSMediaBiasR_gath_tri", (DL_FUNC) &_MSLSMediaBiasR_gath_tri, 1},
    {"_MSLSMediaBiasR_caggH", (DL_FUNC) &_MSLSMediaBiasR_caggH, 5},
    {"_MSLSMediaBiasR_caggG", (DL_FUNC) &_MSLSMediaBiasR_caggG, 3},
    {"_MSLSMediaBiasR_cagglogG", (DL_FUNC) &_MSLSMediaBiasR_cagglogG, 4},
    {"_MSLSMediaBiasR_cagglogH", (DL_FUNC) &_MSLSMediaBiasR_cagglogH, 4},
    {"_MSLSMediaBiasR_ziPropSampling", (DL_FUNC) &_MSLSMediaBiasR_ziPropSampling, 3},
    {"_MSLSMediaBiasR_procrustes_cpp", (DL_FUNC) &_MSLSMediaBiasR_procrustes_cpp, 2},
    {"_MSLSMediaBiasR_rdirichlet_cpp", (DL_FUNC) &_MSLSMediaBiasR_rdirichlet_cpp, 2},
    {"_MSLSMediaBiasR_sampleTransP", (DL_FUNC) &_MSLSMediaBiasR_sampleTransP, 6},
    {"_MSLSMediaBiasR_vec_nbet", (DL_FUNC) &_MSLSMediaBiasR_vec_nbet, 2},
    {"_MSLSMediaBiasR_ZetaSamplingAdC", (DL_FUNC) &_MSLSMediaBiasR_ZetaSamplingAdC, 23},
    {"_MSLSMediaBiasR_vec_nbet_tri", (DL_FUNC) &_MSLSMediaBiasR_vec_nbet_tri, 2},
    {"_MSLSMediaBiasR_vec_nbet_tri_a", (DL_FUNC) &_MSLSMediaBiasR_vec_nbet_tri_a, 2},
    {"_MSLSMediaBiasR_betaSamplingEn", (DL_FUNC) &_MSLSMediaBiasR_betaSamplingEn, 9},
    {"_MSLSMediaBiasR_betaSamplingEnAdC", (DL_FUNC) &_MSLSMediaBiasR_betaSamplingEnAdC, 13},
    {"_MSLSMediaBiasR_rinvgamma", (DL_FUNC) &_MSLSMediaBiasR_rinvgamma, 2},
    {"_MSLSMediaBiasR_invSamplingEn", (DL_FUNC) &_MSLSMediaBiasR_invSamplingEn, 4},
    {"_MSLSMediaBiasR_PosteriorPredictive", (DL_FUNC) &_MSLSMediaBiasR_PosteriorPredictive, 6},
    {"_MSLSMediaBiasR_alphaSamplingEn", (DL_FUNC) &_MSLSMediaBiasR_alphaSamplingEn, 8},
    {"_MSLSMediaBiasR_MCMC", (DL_FUNC) &_MSLSMediaBiasR_MCMC, 54},
    {"_MSLSMediaBiasR_update_zi", (DL_FUNC) &_MSLSMediaBiasR_update_zi, 2},
    {"_MSLSMediaBiasR_update_x", (DL_FUNC) &_MSLSMediaBiasR_update_x, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MSLSMediaBiasR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
