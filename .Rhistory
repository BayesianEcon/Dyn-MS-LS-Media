A%*%D
A = matrix(c(0,1,1,0,
1,0,1,0,
1,1,0,1,
0,0,1,0),4,4, byrow = T)
D = diag(c(1/2, 1/2, 1/3, 1))
A%*%D
10*4
load("/Users/antonioperuzzi/Peruzzi-hpc/RESULT_SC_IT_fe_test_v4.RData")
library(lubridate)
load("/Users/antonioperuzzi/Peruzzi-hpc/RESULT_SC_IT_fe_test_v4.RData")
load("/Users/antonioperuzzi/Desktop/political_programs/political_programs/01_IT/DataEnv_IT_all.RData")
pages_names_it<- c(unique(EL_x$i)) # a vector of page names
Npages<-length(pages_names_it)
dates<- unique(as_date(DBplane$t))
plot.ts(result$phi_gamma_it[,2])
plot.ts(result$alpha_it)
plot.ts(result$phi_gamma_it[,1])
plot.ts(result$phi_gamma_it[,2])
plot.ts(result$phi_gamma_it[,3])
plot.ts(result$phi_gamma_it[,4])
plot.ts(result$phi_gamma_it[,1])
plot.ts(result$phi_gamma_it[,2])
plot.ts(result$phi_gamma_it[,3])
load("/Users/antonioperuzzi/Peruzzi-hpc/LPmodel/political_programs/DataEnv_IT_all.RData")
View(DBplane)
observed_ditance<-0
Time
DBplane$t
c(as.matrix(dist(leaning)))
observed_ditance<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane== t]
dist_leaning <- c(as.matrix(dist(leaning)))^2
observed_ditance<-c(observed_ditance,dist_leaning)
print(t)
}
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
AggC<-aggregate(DBplane$ncomments, by = list(tindex = DBplane$t), FUN = sum)
AggC$x<- log(AggC$x)
AggC$x<- AggC$x - mean(AggC$x)
colnames(AggC)[2]<- "tot_comments"
EL_x<- join(EL_x, AggC, by = "tindex")
library(plyr)
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
AggC<-aggregate(DBplane$ncomments, by = list(tindex = DBplane$t), FUN = sum)
AggC$x<- log(AggC$x)
AggC$x<- AggC$x - mean(AggC$x)
colnames(AggC)[2]<- "tot_comments"
EL_x<- join(EL_x, AggC, by = "tindex")
EL_princ<- join(EL_princ, AggC, by = "tindex")
EL_x$t<-as.numeric(as.factor(EL_x$t))
DBplane$t<-as.numeric(as.factor(DBplane$t))
EL_princ$t<-as.numeric(as.factor(EL_princ$t))
DBplane$ith<-as.numeric(as.factor(DBplane$i))
DBplane$leaning<- (DBplane$leaning - (min(DBplane$leaning)-0.01))/((max(DBplane$leaning)+0.01) - (min(DBplane$leaning)-0.01)   )
############## SETUP
pages_names<- c(unique(EL$i)) # a vector of page names
#Main Dimensions
N<- length(unique(EL_x$i_j)) #number of edges
M<- length(unique(EL_x$i_j))/2 #number of unique edges
Time<- length(unique(EL_x$t)) #number of unique dates
Npages<- length(pages_names) #number of unique pages
K <- 2 #number of states
observed_ditance<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane== t]
dist_leaning <- c(as.matrix(dist(leaning)))^2
observed_ditance<-c(observed_ditance,dist_leaning)
print(t)
}
observed_ditance<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
dist_leaning <- c(as.matrix(dist(leaning)))^2
observed_ditance<-c(observed_ditance,dist_leaning)
print(t)
}
observed_ditance<-observed_ditance[-1]
length(observed_ditance)
D = as.matrix(dist(leaning))
D
D
View(EL_princ)
c(D)
observed_ditance<-EL[,c("i","j","t")]
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_ditance_v<-c(observed_ditance_v,dist_leaning)
print(t)
}
observed_distance<-EL[,c("i","j","t")]
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_ditance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance<-EL[,c("i","j","t")]
observed_distance_v<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_ditance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance_v<-observed_distance_v[-1]
observed_distance$leaning<-observed_distance_v
observed_distance<-EL[,c("i","j","t")]
observed_distance_v<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_ditance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance<-EL[,c("i","j","t")]
observed_distance_v<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_distance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance_v<-observed_distance_v[-1]
observed_distance$leaning<-observed_distance_v
View(observed_ditance)
View(observed_distance)
observed_distance$i<-as.numeric(as.factor(observed_distance$i))
observed_distance$j<-as.numeric(as.factor(observed_distance$i))
observed_distance<-EL[,c("i","j","t")]
observed_distance_v<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_distance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance_v<-observed_distance_v[-1]
observed_distance$leaning<-observed_distance_v
observed_distance$i<-as.numeric(as.factor(observed_distance$i))
observed_distance$j<-as.numeric(as.factor(observed_distance$j))
View(EL_princ)
View(EL_x)
observed_distance$i_j<- paste0(observed_distance$i,"_", observed_distance$j)
View(observed_distance)
observed_distance$t
observed_distance$i_j_t<- paste0(observed_distance$i,"_", observed_distance$j, observed_distance$t )
observed_distance$i_j_t<- paste0(observed_distance$i,"_", observed_distance$j,"_", observed_distance$t )
EL_princ$i_j_t<- paste0(EL_princ$i,"_", EL_princ$j,"_", EL_princ$t )
EL_x$i_j_t<- paste0(EL_x$i,"_", EL_x$j, "_", EL_x$t )
EL_princ<-join(EL_princ, observed_distance[,c("i_j_t", "leaning")] )
EL_x<-join(EL_x, observed_distance[,c("i_j_t", "leaning")] )
View(EL_x)
EL_princ$i_j_t<- paste0(EL_princ$ith,"_", EL_princ$jth,"_", EL_princ$t )
EL_x$i_j_t<- paste0(EL_x$ith,"_", EL_x$jth, "_", EL_x$t )
EL_princ<-join(EL_princ, observed_distance[,c("i_j_t", "leaning")] )
EL_x<-join(EL_x, observed_distance[,c("i_j_t", "leaning")] )
load("/Users/antonioperuzzi/Peruzzi-hpc/LPmodel/political_programs/DataEnv_IT_all.RData")
#source("/home/peruzzi/LPmodel/political_programs/03_FR/InputNodesModification_fr.R")
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
AggC<-aggregate(DBplane$ncomments, by = list(tindex = DBplane$t), FUN = sum)
AggC$x<- log(AggC$x)
AggC$x<- AggC$x - mean(AggC$x)
colnames(AggC)[2]<- "tot_comments"
EL_x<- join(EL_x, AggC, by = "tindex")
EL_princ<- join(EL_princ, AggC, by = "tindex")
EL_x$t<-as.numeric(as.factor(EL_x$t))
DBplane$t<-as.numeric(as.factor(DBplane$t))
EL_princ$t<-as.numeric(as.factor(EL_princ$t))
DBplane$ith<-as.numeric(as.factor(DBplane$i))
DBplane$leaning<- (DBplane$leaning - (min(DBplane$leaning)-0.01))/((max(DBplane$leaning)+0.01) - (min(DBplane$leaning)-0.01)   )
############## SETUP
pages_names<- c(unique(EL$i)) # a vector of page names
#Main Dimensions
N<- length(unique(EL_x$i_j)) #number of edges
M<- length(unique(EL_x$i_j))/2 #number of unique edges
Time<- length(unique(EL_x$t)) #number of unique dates
Npages<- length(pages_names) #number of unique pages
K <- 2 #number of states
observed_distance<-EL[,c("i","j","t")]
observed_distance_v<-0
for(t in 1:Time){
leaning<- DBplane$leaning[DBplane$t== t]
D = as.matrix(dist(leaning))
dist_leaning <- c(D)^2
observed_distance_v<-c(observed_distance_v,dist_leaning)
print(t)
}
observed_distance_v<-observed_distance_v[-1]
observed_distance$leaning<-observed_distance_v
observed_distance$i<-as.numeric(as.factor(observed_distance$i))
observed_distance$j<-as.numeric(as.factor(observed_distance$j))
observed_distance$i_j_t<- paste0(observed_distance$i,"_", observed_distance$j,"_", observed_distance$t )
EL_princ$i_j_t<- paste0(EL_princ$ith,"_", EL_princ$jth,"_", EL_princ$t )
EL_x$i_j_t<- paste0(EL_x$ith,"_", EL_x$jth, "_", EL_x$t )
observed_distance[,c("i_j_t", "leaning")]
EL_x$i_j_t
EL_princ<-join(EL_princ, observed_distance[,c("i_j_t", "leaning")] )
EL_x<-join(EL_x, observed_distance[,c("i_j_t", "leaning")] )
View(EL_princ)
View(EL_x)
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_DE.Rdata")
round(colMeans(res$RES),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.05)}),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.95)}),2)
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_FR.Rdata")
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_FR.Rdata")
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_FR.Rdata")
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_FR.Rdata")
round(colMeans(res$RES),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.05)}),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.95)}),2)
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_IT.Rdata")
round(colMeans(res$RES),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.05)}),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.95)}),2)
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_SP.Rdata")
round(colMeans(res$RES),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.05)}),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.95)}),2)
load("/Users/antonioperuzzi/Peruzzi-hpc/RESULT_SC_SPv_fe_rg.RData")
plot.ts(result$alpha_it)
sum(duplicated(result$alpha_it))
load("/Users/antonioperuzzi/Peruzzi-hpc/Table_Alpha_SP.Rdata")
round(colMeans(res$RES),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.05)}),2)
round(apply(res$RES,2, FUN = function(x){quantile(x, 0.95)}),2)
tail(result$alpha_it)
exp(1.746)
dim(res$Ymat)
load("/Users/antonioperuzzi/Peruzzi-hpc/last_hpc_save/SP_all/DataEnv_SP_all.RData")
DBplane<-DBplane[! DBplane$fb_name %in% c("La Voz de Asturias") ,  ]
DBplane$i<- as.numeric(factor(DBplane$fb_name))
#
EL_x<-EL_x[! EL_x$i %in% c("La Voz de Asturias") ,  ]
EL_x<-EL_x[! EL_x$j %in% c("La Voz de Asturias") ,  ]
#
EL_princ<-EL_princ[! EL_princ$i %in% c("La Voz de Asturias") ,  ]
EL_princ<-EL_princ[! EL_princ$j %in% c("La Voz de Asturias") ,  ]
#
EL<-EL[! EL$i %in% c("La Voz de Asturias") ,  ]
EL<-EL[! EL$j %in% c("La Voz de Asturias") ,  ]
EL$ith<-as.numeric(factor(EL$i) , levels = unique(EL$i))
EL$jth<-as.numeric(factor(EL$j) , levels = unique(EL$i))
EL_x$ith<-as.numeric(factor(EL_x$i) , levels = unique(EL_x$i))
EL_x$jth<-as.numeric(factor(EL_x$j) , levels = unique(EL_x$i))
EL_princ$ith<-as.numeric(factor(EL_princ$i , levels = unique(EL_x$i)))
EL_princ$jth<-as.numeric(factor(EL_princ$j, levels = unique(EL_x$i)))
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
Npages
N<- length(unique(EL_x$i_j)) #number of edges
M<- length(unique(EL_x$i_j))/2 #number of unique edges
Time<- length(unique(EL_x$t)) #number of unique dates
Npages<- length(pages_names) #number of unique pages
Npages
load("/Users/antonioperuzzi/Peruzzi-hpc/last_hpc_save/SP_all/DataEnv_SP_all.RData")
DBplane<-DBplane[! DBplane$fb_name %in% c("La Voz de Asturias") ,  ]
DBplane$i<- as.numeric(factor(DBplane$fb_name))
#
EL_x<-EL_x[! EL_x$i %in% c("La Voz de Asturias") ,  ]
EL_x<-EL_x[! EL_x$j %in% c("La Voz de Asturias") ,  ]
#
EL_princ<-EL_princ[! EL_princ$i %in% c("La Voz de Asturias") ,  ]
EL_princ<-EL_princ[! EL_princ$j %in% c("La Voz de Asturias") ,  ]
#
EL<-EL[! EL$i %in% c("La Voz de Asturias") ,  ]
EL<-EL[! EL$j %in% c("La Voz de Asturias") ,  ]
EL$ith<-as.numeric(factor(EL$i) , levels = unique(EL$i))
EL$jth<-as.numeric(factor(EL$j) , levels = unique(EL$i))
EL_x$ith<-as.numeric(factor(EL_x$i) , levels = unique(EL_x$i))
EL_x$jth<-as.numeric(factor(EL_x$j) , levels = unique(EL_x$i))
EL_princ$ith<-as.numeric(factor(EL_princ$i , levels = unique(EL_x$i)))
EL_princ$jth<-as.numeric(factor(EL_princ$j, levels = unique(EL_x$i)))
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
#source("/home/peruzzi/LPmodel/political_programs/03_FR/InputNodesModification_fr.R")
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
EL_x$t<-as.numeric(as.factor(EL_x$t))
DBplane$t<-as.numeric(as.factor(DBplane$t))
EL_princ$t<-as.numeric(as.factor(EL_princ$t))
DBplane$ith<- DBplane$i
DBplane$leaning<- (DBplane$leaning - (min(DBplane$leaning)-0.01))/((max(DBplane$leaning)+0.01) - (min(DBplane$leaning)-0.01)   )
############## SETUP
pages_names<- c(unique(DBplane$fb_name)) # a vector of page names
#Main Dimensions
N<- length(unique(EL_x$i_j)) #number of edges
M<- length(unique(EL_x$i_j))/2 #number of unique edges
Time<- length(unique(EL_x$t)) #number of unique dates
Npages<- length(pages_names) #number of unique pages
K <- 2 #number of states
Npages
load("/Users/antonioperuzzi/RESULT_SC_SP_fe_random.RData")
tail(result$alpha_it)
abline(result$alpha_it, col = "blue")
lines(result$alpha_it, col = "blue")
AggC<-aggregate(DBplane$ncomments, by = list(tindex = DBplane$t), FUN = sum)
AggC$x<- log(AggC$x)
AggC$x<- AggC$x - mean(AggC$x)
colnames(AggC)[2]<- "tot_comments"
EL_x<- join(EL_x, AggC, by = "tindex")
library(plyr)
EL_x<- join(EL_x, AggC, by = "tindex")
EL_princ<- join(EL_princ, AggC, by = "tindex")
EL_x$t<-as.numeric(as.factor(EL_x$t))
DBplane$t<-as.numeric(as.factor(DBplane$t))
EL_princ$t<-as.numeric(as.factor(EL_princ$t))
DBplane$ith<-as.numeric(as.factor(DBplane$i))
DBplane$leaning<- (DBplane$leaning - (min(DBplane$leaning)-0.01))/((max(DBplane$leaning)+0.01) - (min(DBplane$leaning)-0.01)   )
EL_x$ith_jth<-paste0(EL_x$ith,"_",EL_x$jth)
EL_x$i_j<- EL_x$ith_jth
EL_x$t<-as.numeric(as.factor(EL_x$t))
DBplane$t<-as.numeric(as.factor(DBplane$t))
EL_princ$t<-as.numeric(as.factor(EL_princ$t))
DBplane$ith<-as.numeric(as.factor(DBplane$i))
agg<-aggregate(EL_x$w, by = list( i = EL_x$i, t = EL_x$t), FUN = sum) # strength distr through time
agg3<-aggregate(agg$x, by = list(agg$t), FUN = mean)
agg4<-aggregate(agg$x, by = list(agg$t), FUN = var)
round(mean(agg3$x),2)
round(mean(sqrt(agg4$x)),2)
round(mean(agg4$x)/mean(agg3$x),2)
nrow(EL_x)
EL_x$w<-rpois(nrow(EL_x), exp(1.746))
agg<-aggregate(EL_x$w, by = list( i = EL_x$i, t = EL_x$t), FUN = sum) # strength distr through time
agg3<-aggregate(agg$x, by = list(agg$t), FUN = mean)
agg4<-aggregate(agg$x, by = list(agg$t), FUN = var)
round(mean(agg3$x),2)
round(mean(sqrt(agg4$x)),2)
round(mean(agg4$x)/mean(agg3$x),2)
gc()
load("/Users/antonioperuzzi/Peruzzi-hpc/chapter_res_dyn_sequential_SP.RData")
#
# z_check<-zPos[[1]]
#
# library(data.table)
# db_z<-rbindlist(z_check)
#
# plot.ts(db_z$V1[db_z$i == 10])
plot.ts(colMedians(nclusters[5000:10000,]))
library(LaplacesDemon)
library(mvtnorm)
#library(Rcpp)
#library(BayesHMM)
library(reshape2)
library(plyr)
library(data.table)
library(MASS)
library(vegan)
#library(RcppArmadillo)
# library(gtools)
library(rlist)
plot.ts(colMedians(nclusters[5000:10000,]))
#
# z_check<-zPos[[1]]
#
# library(data.table)
# db_z<-rbindlist(z_check)
#
# plot.ts(db_z$V1[db_z$i == 10])
plot.ts(colMedian(nclusters[5000:10000,]))
#
# z_check<-zPos[[1]]
#
# library(data.table)
# db_z<-rbindlist(z_check)
#
# plot.ts(db_z$V1[db_z$i == 10])
plot.ts(apply(nclusters[5000:10000,],2,median))
#
# z_check<-zPos[[1]]
#
# library(data.table)
# db_z<-rbindlist(z_check)
#
# plot.ts(db_z$V1[db_z$i == 10])
plot.ts(apply(alf_ite[5000:10000,],2,mean))
load("/Users/antonioperuzzi/Desktop/political_programs/outlet_posts/outlets.RData")
View(outlets)
install.packages("xlConnect")
XLConnect
install.packages("XLConnect")
install.packages("xlsx")
library("xlsx")
rm(list = ls())
########CHANGE YOUR PATH ###########
setwd("~/Desktop/RepositoryJASA/")
#####################################
#install all the packages necessary to run the scripts
# Compatibility tested with R 2020-10-10, "Bunny-Wunnies Freak Out"
#For Windows users: if source compilation fails try install the package individually with:
#install.packages("packagename", type = "binary")
#If you run rcpp scripts from R makes sure that Rtools is correctly installed
#https://cran.r-project.org/bin/windows/Rtools/rtools43/rtools.html
#For Mac users: if you experience troubles in the installation of Rcpp with an M1 processor
#(and later versions), please refer to the following link for further instructions
#https://thecoatlessprofessor.com/programming/cpp/r-compiler-tools-for-rcpp-on-macos/
#packages for running the models
list.of.packages <- c("mvtnorm", "Rcpp", "RcppDist", "RcppParallel", "RcppArmadillo")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#load libraries to check that everything is running smoothly
library(mvtnorm)
library(Rcpp)
library(RcppDist)
library(RcppParallel)
library(RcppArmadillo)
#packages for data manipulation and plotting part 1
list.of.packages <- c( "ggplot2", "ggrepel", "tidyr", "scales", "dplyr", "data.table", "patchwork", "ggpubr", "metR", "igraph")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, type = "binary")
#load libraries to check that everything is running smoothly
library(ggplot2)
library(ggrepel)
library(tidyr)
library(scales)
library(dplyr)
library(data.table)
library(patchwork)
library(ggpubr)
library(metR)
library(igraph)
#packages for data manipulation and plotting part 2
list.of.packages <- c("lubridate","grid", "ggraph","ggiraphExtra","ggtext","ggnewscale","tidygraph", "ggpmisc")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, type = "binary")
#load libraries to check that everything is running smoothly
library(lubridate)
library(grid)
library(ggraph)
library(ggiraphExtra)
library(ggtext)
library(ggnewscale)
library(tidygraph)
library(ggpmisc)
#packages for data manipulation and plotting part 2
list.of.packages <- c("udpipe", "quanteda", "quanteda.textstats", "plm", "readtext","readr", "reshape2","stringi","stringr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#load libraries to check that everything is running smoothly
library(udpipe)
library(quanteda)
library(quanteda.textstats)
library(plm)
library(readtext)
library(readr)
library(plyr)
library(reshape2)
library(stringi)
library(stringr)
rm(list = ls())
#packages for data manipulation and plotting part 3
list.of.packages <- c("MCMCpack", "tidyverse", "gtable")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#load libraries to check that everything is running smoothly
library(MCMCpack)
library(tidyverse)
library(gtable)
rm(list = ls())
#load the libraries
list.of.packages <- c("mvtnorm", "Rcpp", "RcppDist", "RcppParallel", "RcppArmadillo","data.table")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
########CHANGE YOUR PATH ###########
setwd("~/Desktop/RepositoryJASA/")
#####################################
library(data.table)
library(mvtnorm)
library(Rcpp)
library(RcppDist)
library(RcppParallel)
library(RcppArmadillo)
library(data.table)
############## Synthetic Data Generation #######################
source("Code/04-Simulation/JASA_Simulation_01_dgp.R")
setwd("~/Documents/GitHub/Dyn-MS-LS-Media/Code/04-Simulation")
rm(list = ls())
#load the libraries
list.of.packages <- c("mvtnorm", "Rcpp", "RcppDist", "RcppParallel", "RcppArmadillo","data.table")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
########CHANGE YOUR PATH ###########
setwd("~/Documents/GitHub/Dyn-MS-LS-Media/")
#####################################
library(data.table)
library(mvtnorm)
library(Rcpp)
library(RcppDist)
library(RcppParallel)
library(RcppArmadillo)
library(data.table)
############## Synthetic Data Generation #######################
source("Code/04-Simulation/JASA_Simulation_01_dgp.R")
############## Gibbs Sampler #######################
############## Preliminaries #######################
load("Data/Simulation/JASA_SimulationEnv_FE.RData")
sourceCpp("Code/Model/JASA_MS_LS_FE.cpp")
unlink("~/.R/Makevars")
unlink("~/.Renviron")
file.edit("~/.Renviron")
